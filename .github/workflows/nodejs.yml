name: Node CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      BRANCH: ${{ github.ref }}
      COMMIT: ${{ secret.token }}

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        npm ci
        npm run build --if-present
        npm test
      env:
        CI: true
    - name: Build docker image
      id: docker_build
      env:
        DOCKER_REGISTRY: 'docker.io'
        DOCKER_NAMESPACE: 'xebxke'
        DOCKER_IMAGE: 'awesome-pg-app'
        BRANCH: ${{ github.ref }}
      run: |
        docker build -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$DOCKER_IMAGE:${BRANCH#refs/heads/}-$GITHUB_SHA .
        echo "::set-output name=docker_tag::$DOCKER_REGISTRY/$DOCKER_NAMESPACE/$DOCKER_IMAGE:${BRANCH#refs/heads/}-$GITHUB_SHA"
    - name: Push docker image
      id: docker_push
      env:
        DOCKER_REGISTRY: 'docker.io'
      run: |
        docker login $DOCKER_REGISTRY --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_PASSWORD }}
        docker push ${{ steps.docker_build.outputs.docker_tag }}

    - name: Notify Slack on failure
      if: failure()
      uses: ./.github/actions/slack-notifier
      env:
        SLACK_CHANNEL: "#xke-github-actions"
        SLACK_BOT: "githubActionRulz"
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      with:
        message: "Hello from PG"
        - name: Notify Slack on success
          if: success()
          uses: ./.github/actions/slack-notifier
          env:
            SLACK_CHANNEL: "#xke-github-actions"
            SLACK_BOT: "githubActionRulz"
            SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          with:
            message: "${{ github.actor }} published a new image : ${{ steps.docker_build.outputs.docker_tag }}"
